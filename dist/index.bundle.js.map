{"version":3,"file":"index.bundle.js","mappings":"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","sources":["webpack://stopwatch/./dev_modules/@ocdla/Timer/Timer.js","webpack://stopwatch/webpack/bootstrap","webpack://stopwatch/webpack/runtime/define property getters","webpack://stopwatch/webpack/runtime/hasOwnProperty shorthand","webpack://stopwatch/webpack/runtime/make namespace object","webpack://stopwatch/./src/js/indexStart.js"],"sourcesContent":[" // Note this class actually works:\r\n// let cd = new Timer(10);\r\n// cd.start();\r\n// cd.stop();\r\n\r\nclass Timer {\r\n\r\n    // The generator used to display units (usually seconds) for this timer.\r\n    g;\r\n\r\n    // Window.setInterval or Node global.setInterval.\r\n    interval;\r\n\r\n    // Specify precision in milliseconds.\r\n    // Defaults to 1 second.\r\n    static PRECISION = 1000;\r\n\r\n    // What sounds does the timer make when done?\r\n    static TIMER_FINISHED_SOUND = 'BEEP!';\r\n\r\n    // Instantiate a Timer; initialize its generator.\r\n    // For more information see:\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\r\n    constructor(timestringOrSeconds) {\r\n        // let seconds = TimeString.seconds(timestring); Imagine passing in \"5m 30s\"; would need to be converted to seconds.\r\n        let seconds = timestringOrSeconds;\r\n        this.g = this.counter(seconds);\r\n    }\r\n\r\n\r\n    // Generator function that returns a number each time its next() method is called.\r\n    * counter(units) {\r\n        for (let i = units; i >= 0; i--) {\r\n            yield i;\r\n        }\r\n    }\r\n\r\n    \r\n    // Start this timer.\r\n    start() {\r\n\r\n        this.interval = setInterval(() => {\r\n        const seconds = this.g.next().value;\r\n        if (seconds === undefined) {\r\n            clearInterval(this.interval);\r\n            console.log(Timer.TIMER_FINISHED_SOUND);\r\n            // this.rener(0);\r\n        } else {\r\n            console.log(seconds);\r\n            // this.render(seconds);\r\n            return this.render()\r\n        }\r\n        }, Timer.PRECISION);\r\n     \r\n    }\r\n\r\n\r\n    // Stop this timer.\r\n    stop() {\r\n        clearInterval(this.interval);\r\n        // this.render(0);\r\n    }\r\n\r\n\r\n    render(seconds) {\r\n\r\n        let h,m,s;\r\n\r\n        [h, m, s] = Timer.parse(seconds); // Parse seconds into hour,min,sec *string notation.\r\n\r\n        return [h,m,s];\r\n        // Use JSX syntax.\r\n        // For Week 2\r\n        /*\r\n        return (\r\n            <div class=\"timer\">\r\n                <span class=\"hours\">{h}</span>\r\n                <span class=\"minutes\">{m}</span>\r\n                <span class=\"seconds\">{s}</span>\r\n            </div>\r\n        );\r\n        */\r\n    }\r\n    static convertTimer(sec){\r\n    let minutes = Math.floor(sec / 6000);\r\n    let seconds = Math.floor(sec / 100) % 60;\r\n    let milliseconds = sec % 100;\r\n\r\n    return [minutes, seconds, milliseconds];\r\n    }\r\n    static padTimer(number) {\r\n        if (number < 10) {\r\n            number = \"0\" + number;\r\n    \r\n        }\r\n    }\r\n\r\n    static parse(seconds, pad=true) {\r\n        \r\n        let hr, min, sec = Timer.convertTimer(seconds)\r\n        if(pad = true){\r\n        Timer.padTimer(hr);\r\n        Timer.padTimer(min);\r\n        Timer.padTimer(sec);\r\n        }\r\n        return [hr,min,sec]; // For example to display 01:25:05\r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n \r\nexport default Timer;\r\n \r\n \r\n \r\n \r\n /*export function incrementTimer(elapsedTime) {\r\n    // Increment the elapsedTime\r\n    elapsedTime++;\r\n\r\n    // Calculate minutes, seconds, and milliseconds\r\n    let minutes = Math.floor(elapsedTime / 6000);\r\n    let seconds = Math.floor(elapsedTime / 100) % 60;\r\n    let milliseconds = elapsedTime % 100;\r\n\r\n    return [minutes, seconds, milliseconds, elapsedTime];\r\n}*/\r\n/*export function decrementTimer(elapsedTime) {\r\n    // decrement the elapsedTime\r\n    elapsedTime--;\r\n    \r\n\r\n    // Calculate minutes, seconds, and milliseconds\r\n    let minutes = Math.floor(elapsedTime / 6000);\r\n    let seconds = Math.floor(elapsedTime / 100) % 60;\r\n    let milliseconds = elapsedTime % 100;\r\n\r\n    return [minutes, seconds, milliseconds, elapsedTime];\r\n}\r\nexport function padTimer(number) {\r\n    // add a leading 0 to number if the number is < 10\r\n    if (number < 10) {\r\n        number = \"0\" + number;\r\n\r\n    }\r\n    // return number\r\n    return number;\r\n}\r\nexport function calcTimer(minutes, seconds, miliseconds){\r\n    //return number of total nanosecends\r\n    let totalMilliseconds = 0;\r\n    if (!isNaN(minutes)){\r\n    totalMilliseconds += (minutes * 60) * 100}\r\n    if (!isNaN(seconds))\r\n    totalMilliseconds += seconds * 100\r\n    if(!isNaN(miliseconds))\r\n    totalMilliseconds += miliseconds\r\n    //+ (seconds * 1000) + milliseconds;\r\n    return totalMilliseconds;\r\n}*/","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Timer from '../../dev_modules/@ocdla/Timer/Timer'\r\n\r\n/*class Timer {\r\n    static methodsnames = [\"reset\", \"stop\"]\r\n    constructor() {\r\n        \r\n        this.isRunning = false;\r\n        this.isIncementing = false;\r\n        this.isDecrementing = false;\r\n        this.timer = null;\r\n        this.elapsedTime = 0;\r\n        \r\n        this.createTimer = this.createTimer.bind(this);\r\n        //this.startTimer = this.startTimer.bind(this);\r\n        this.updateTimer = this.updateTimer.bind(this);\r\n        //this.stopTimer = this.stopTimer.bind(this);\r\n        this.resetTimer = this.resetTimer.bind(this);\r\n        document.getElementById(\"addtimer\").onclick = this.createTimer.bind(this);\r\n      \r\n        \r\n    }\r\n    createTimer() {\r\n        document.getElementById(\"timer\").innerHTML = this.generateHTML()\r\n        this.addEventHandlers();\r\n    }\r\n    generateHTML() {\r\n        let HTML = this.generateHeader()\r\n        HTML += this.generateTimerBtn(\"decrease\")\r\n        HTML += this.generatefooter();\r\n        return HTML\r\n    }\r\n    generatetempHTML() {\r\n        let HTML = this.generateOgHTML()\r\n        for(let i = 0; i < 2; i++) {\r\n            HTML += this.generateTimerBtn(Timer.methodsnames[i])\r\n        }\r\n        HTML += this.generatefooter();\r\n        return HTML\r\n    }\r\n    generateHeader(){\r\n        return ` <div class=\"h1 p-5 mt-4 text-center bg-light rounded\">\r\n        <input type=\"number\" id=\"minutes\" value=\"0\" style=\"width: 75px;\"> : \r\n        <input type=\"number\" id=\"seconds\" value=\"0\" style=\"width: 75px;\"> : \r\n        <input type=\"number\" id=\"milliseconds\" value=\"0\" style=\"width: 75px;\">\r\n      </div>\r\n      <div id=\"controls\">\r\n        <div class=\"container text-center\">`\r\n    }\r\n    generateTimerBtn(mthd){\r\n        return ` \r\n        <button class=\"btn btn-lg btn-success\" data-action=\"${mthd}\" id=\"controls\">\r\n        ${mthd}\r\n        </button>`\r\n    }\r\n    generateOgHTML(){\r\n        return ` <div class=\"h1 p-5 mt-4 text-center bg-light rounded\">\r\n        <span id=\"minutes\">00</span> : <span id=\"seconds\">00</span>: <span id=\"milliseconds\">00</span>\r\n      </div>\r\n      <div id=\"controls\">\r\n        <div class=\"container text-center\">`\r\n    }\r\n    generatefooter(){\r\n        return`\r\n            </div>\r\n        </div>`\r\n    }\r\n\r\n    addEventHandlers() {\r\n        // Put the element on the page with an id of start in a variable\r\n        // Do the same for the stop button and the reset button\r\n       \r\n        let controls = document.getElementById(\"controls\");\r\n        controls.addEventListener(\"click\", this);\r\n        \r\n\r\n    }\r\n    handleEvent(e){\r\n        //deturmine if what btn the user pressed\r\n        let target = e.target;\r\n        let action = target.dataset.action;\r\n        let method = action + \"Timer\";\r\n        this[method]();\r\n\r\n       \r\n\r\n    }\r\n    decreaseTimer() {\r\n        this.setTimer();\r\n        if (this.isRunning == false && this.elapsedTime > 0) {\r\n            \r\n            this.isRunning = true;\r\n            this.isDecrementing = true;\r\n            this.timer = setInterval(this.updateTimer, 10);\r\n\r\n        }\r\n    }\r\n    setTimer(){\r\n        let minutes = document.getElementById('minutes');\r\n        let seconds = document.getElementById('seconds');\r\n        let miliseconds = document.getElementById('milliseconds');\r\n        this.elapsedTime = timer.calcTimer(parseInt(minutes.value), parseInt(seconds.value), parseInt(miliseconds.value));\r\n\r\n        document.getElementById(\"timer\").innerHTML = this.generatetempHTML()\r\n        this.addEventHandlers();\r\n        return;\r\n    }\r\n    updateTimer() {\r\n        \r\n        if (this.isRunning && this.isDecrementing) {  \r\n            const [minutes, seconds, milliseconds, cTime] = timer.decrementTimer(this.elapsedTime);\r\n            this.elapsedTime = cTime;\r\n            this.renderTimer(minutes, seconds, milliseconds);\r\n            if (this.elapsedTime == 0) {\r\n                this.stopTimer()\r\n                this.createTimer();\r\n            }    \r\n        }\r\n    }\r\n\r\n    renderTimer(minutes, seconds, miliseconds) {\r\n        //show the value of both on the webpage\r\n        //this one being minutes\r\n        document.getElementById(\"minutes\").innerHTML = timer.padTimer(minutes);\r\n        //this one being seconds\r\n        document.getElementById(\"seconds\").innerHTML = timer.padTimer(seconds);\r\n        //this one for miliseconds\r\n        document.getElementById(\"milliseconds\").innerHTML = timer.padTimer(miliseconds);\r\n\r\n    }\r\n\r\n\r\n    stopTimer() {\r\n        // if the timer is running, stop it by\r\n        // set isRunning to false\r\n        // call the function clearInterval to stop the timer\r\n        // end if\r\n        if (this.isRunning) {\r\n            // set isRunning to false\r\n            this.isRunning = false;\r\n            this.isIncementing = false;\r\n            this.isDecrementing = false;\r\n            clearInterval(this.timer);\r\n        }\r\n\r\n    }\r\n\r\n    resetTimer() {\r\n        // stop the timer by calling stopTimer\r\n        this.stopTimer();\r\n        this.createTimer();\r\n        \r\n    }\r\n}\r\n\r\n// When the page has finished loading, call the function init\r\nwindow.onload = () => { new Timer };*/\r\nwindow.onload = console.log(\"Im alive!\")\r\ncreateTimer();\r\nlet timer;\r\nconst methodsnames = [\"reset\", \"stop\"]\r\n//const myTimer = new Timer();\r\n\r\nfunction createTimer() {\r\n    document.getElementById(\"timer\").innerHTML = generateHTML()\r\n    addEventHandlers();\r\n}\r\nfunction generateHTML() {\r\n    let HTML = generateHeader()\r\n    HTML += generateTimerBtn(\"decrease\")\r\n    HTML += generatefooter();\r\n    return HTML\r\n}\r\nfunction generatetempHTML() {\r\n    let HTML = generateOgHTML()\r\n    for(let i = 0; i < 2; i++) {\r\n        HTML += generateTimerBtn(methodsnames[i])\r\n    }\r\n    HTML += generatefooter();\r\n    return HTML\r\n}\r\nfunction generateHeader(){\r\n    return ` <div class=\"h1 p-5 mt-4 text-center bg-light rounded\">\r\n    <input type=\"number\" id=\"minutes\" value=\"0\" style=\"width: 75px;\"> : \r\n    <input type=\"number\" id=\"seconds\" value=\"0\" style=\"width: 75px;\"> : \r\n    <input type=\"number\" id=\"milliseconds\" value=\"0\" style=\"width: 75px;\">\r\n  </div>\r\n  <div id=\"controls\">\r\n    <div class=\"container text-center\">`\r\n}\r\nfunction generateTimerBtn(mthd){\r\n    return ` \r\n    <button class=\"btn btn-lg btn-success\" data-action=\"${mthd}\" id=\"controls\">\r\n    ${mthd}\r\n    </button>`\r\n}\r\nfunction generateOgHTML(){\r\n    return ` <div class=\"h1 p-5 mt-4 text-center bg-light rounded\">\r\n    <span id=\"minutes\">00</span> : <span id=\"seconds\">00</span>: <span id=\"milliseconds\">00</span>\r\n  </div>\r\n  <div id=\"controls\">\r\n    <div class=\"container text-center\">`\r\n}\r\nfunction generatefooter(){\r\n    return`\r\n        </div>\r\n    </div>`\r\n}\r\n\r\nfunction addEventHandlers() {\r\n    // Put the element on the page with an id of start in a variable\r\n    // Do the same for the stop button and the reset button\r\n   \r\n    let controls = document.getElementById(\"controls\");\r\n    controls.addEventListener(\"click\", handleEvent);\r\n    \r\n\r\n}\r\nfunction handleEvent(e){\r\n    //deturmine if what btn the user pressed\r\n    let target = e.target;\r\n    let action = target.dataset.action;\r\n    let method = action + \"Timer\";\r\n    if (method == \"decreaseTimer\"){\r\n        decreaseTimer()\r\n    }\r\n    if (action == \"stop\"){\r\n        timer.stop();\r\n    }\r\n}\r\n\r\nfunction decreaseTimer() {\r\n    console.log(\"here\")\r\n    setTimer();\r\n   \r\n}\r\nfunction setTimer(){\r\n    let minutes = document.getElementById('minutes');\r\n    let seconds = document.getElementById('seconds');\r\n    let miliseconds = document.getElementById('milliseconds');\r\n    let cal = calcTimer(parseInt(minutes.value), parseInt(seconds.value), parseInt(miliseconds.value));\r\n    timer = new Timer(cal)\r\n\r\n    document.getElementById(\"timer\").innerHTML = generatetempHTML()\r\n    addEventHandlers();\r\n    \r\n    let sec = timer.start();\r\n    console.log(sec)\r\n    return;\r\n}\r\nfunction calcTimer(minutes, seconds, miliseconds){\r\n    //return number of total nanosecends\r\n    let totalMilliseconds = 0;\r\n    if (!isNaN(minutes)){\r\n    totalMilliseconds += (minutes * 60) * 100}\r\n    if (!isNaN(seconds))\r\n    totalMilliseconds += seconds * 100\r\n    if(!isNaN(miliseconds))\r\n    totalMilliseconds += miliseconds\r\n    //+ (seconds * 1000) + milliseconds;\r\n    return totalMilliseconds;\r\n}"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_defineProperty","obj","_toPrimitive","toPrimitive","String","Number","Timer","timestringOrSeconds","seconds","counter","units","counter$","_context","start","_this","interval","setInterval","undefined","clearInterval","console","log","TIMER_FINISHED_SOUND","render","PRECISION","m","_Timer$parse","parse","_Timer$parse2","_slicedToArray","convertTimer","sec","minutes","Math","floor","milliseconds","padTimer","number","pad","arguments","hr","min","window","onload","createTimer","timer","methodsnames","document","getElementById","innerHTML","generateHTML","addEventHandlers","HTML","generateHeader","generateTimerBtn","generatefooter","generatetempHTML","generateOgHTML","mthd","concat","controls","addEventListener","handleEvent","action","dataset","decreaseTimer","setTimer","miliseconds","cal","calcTimer","parseInt","totalMilliseconds"],"sourceRoot":""}